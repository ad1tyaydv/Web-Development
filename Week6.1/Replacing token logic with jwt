const express = require('express');
const jwt = require('jswonwebtoken');
const JWT_SECRET = "randomadityayadavcoding"
const app = express();
app.use(express.json());

const users = [];   // Global Array

function generateToken() {

    let options = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    let token = "";
    for (let i = 0; i < 32; i++) {
        // use a simple function here
        token += options[Math.floor(Math.random() * options.length)];
    }
    return token;
}

app.post("/signup", function(req, res) {
    const username = req.body.username;
    const password = req.body.password;

    users.push({
        username: username,
        password: password
    })

    res.json({
        message: "You are signed up"
    })

    console.log(users);
})

app.post("/signin", function(req, res) {
    const username = req.body.username;
    const password = req.body.password;

    // Using maps and filter
    let foundUser = null;

    for(let i=0;i<users.length;i++) {
        if(users[i].username == username && users[i].password == password) {
            foundUser = users[i];
        }
    }

    if(foundUser) {
        const token = jwt.sign({
            username: username
        }, JWT_SECRET);
        
        // foundUser.token = token;
        res.json({
            message: token
        })
    } 
    else {
        res.status(403).send({
            message: "Invalid useraname or Password"
        })
    }

    console.log(users);
})

app.get("/me", function(req, res) {
    const token = req.headers.token
    const decodedInformation = jwt.verify(token, JWT_SECRET);  // Converting the jwt to the username
    const username = decodedInformation.username


    let foundUser = null;

    for(let i=0;i<users.length;i++) {
        if(users[i].token == token) {
            foundUser = users[i];
        }
    }

    if(foundUser) {
        res.json({
            username: foundUser.username,
            password: foundUser.password
        })
    }
    else {
        res.json({
            message: "token invalid"
        })
    }
}) 

app.listen(3000);  // that bhe http server is listening on post 3000
